import { Provider } from '@nestjs/common';
import { MailgunClientOptions } from 'mailgun.js';
import type { OptionsAsync } from './interfaces';
import { MailgunService } from './mailgun.service';
export declare class MailgunModule {
    static forRoot(config: MailgunClientOptions): {
        module: typeof MailgunModule;
        providers: (typeof MailgunService | {
            provide: string;
            useValue: MailgunClientOptions;
        })[];
        exports: (typeof MailgunService)[];
    };
    static forAsyncRoot(config: OptionsAsync): {
        module: typeof MailgunModule;
        imports: (import("@nestjs/common").Type<any> | import("@nestjs/common").DynamicModule | Promise<import("@nestjs/common").DynamicModule> | import("@nestjs/common").ForwardReference<any>)[];
        providers: Provider[];
        exports: (typeof MailgunService)[];
    };
    private static createAsyncProviders;
}
