"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
var __metadata = (this && this.__metadata) || function (k, v) {
    if (typeof Reflect === "object" && typeof Reflect.metadata === "function") return Reflect.metadata(k, v);
};
var __param = (this && this.__param) || function (paramIndex, decorator) {
    return function (target, key) { decorator(target, key, paramIndex); }
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.MailgunService = void 0;
const form_data_1 = __importDefault(require("form-data"));
const common_1 = require("@nestjs/common");
const mailgun_js_1 = __importDefault(require("mailgun.js"));
const constants_1 = require("./constants");
let MailgunService = exports.MailgunService = class MailgunService {
    constructor(configuration) {
        this.configuration = configuration;
        this.createEmail = async (domain, data) => this.mailgun.messages.create(domain, data);
        this.validateEmail = async (email) => {
            try {
                return await this.mailgun.validate.get(email);
            }
            catch (e) {
                throw new Error(e);
            }
        };
        this.createList = async (data) => this.mailgun.lists.create(data);
        this.destroyList = async (mailListAddress) => this.mailgun.lists.destroy(mailListAddress);
        this.getList = async (mailListAddress) => this.mailgun.lists.get(mailListAddress);
        this.updateList = async (mailListAddress, data) => this.mailgun.lists.update(mailListAddress, data);
        this.listAddMember = async (mailListAddress, data) => this.mailgun.lists.members.createMember(mailListAddress, data);
        this.listGetMembers = async (mailListAddress, query) => this.mailgun.lists.members.listMembers(mailListAddress, query);
        this.listCreateMembers = async (mailListAddress, data) => this.mailgun.lists.members.createMembers(mailListAddress, data);
        this.listupdateMember = async (address, memberAddress, data) => this.mailgun.lists.members.updateMember(address, memberAddress, data);
        this.listDestroyMember = async (address, memberAddress) => this.mailgun.lists.members.destroyMember(address, memberAddress);
        this.mailgun = new mailgun_js_1.default(form_data_1.default).client(configuration);
    }
};
exports.MailgunService = MailgunService = __decorate([
    (0, common_1.Injectable)(),
    __param(0, (0, common_1.Inject)(constants_1.MAILGUN_CONFIGURATION)),
    __metadata("design:paramtypes", [Object])
], MailgunService);
//# sourceMappingURL=mailgun.service.js.map